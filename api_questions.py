from pprint import pprint
from random import randint

import telebot
import openai
import requests

import sched
import time

API_BOT_TOKEN = '5674599951:AAGpbgwXzed851mBSbk6LdGASyZQ58ViTsc'
openai.api_key = "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"
engine = "text-davinci-003"
bot = telebot.TeleBot(API_BOT_TOKEN)

API_KEY = 'ed7e5bf085017ff387cb6917ade9ff84'
YANDEX_API_KEY = '2f2ca885-818f-4e46-89dc-c6303e7086a8'
lat = '59.938732'
lon = '30.316229'
headers = {'Yandex-API-Key': YANDEX_API_KEY}

random_values_fuck = [
    '—Å–∞–º –∏–¥–∏',
    '–£–ô',
    '–í–æ—Ç –∏–º–µ–Ω–Ω–æ, –ø–æ—à–µ–ª –ù–ê–•–£–ô!',
    '–û–π –∫–∞–∫ –Ω–µ–∫—É–ª—å—Ç—É—Ä–Ω–æ',
    '–ú–∞—Ç–µ –ö–£–ù–ï–ú –ï–ë–ê–¢–¨'
]
random_values_gor = [
    '–Ø –ì–æ—Ä–∞ –Ω–∞ —à–∞—à–ª—ã—á–∫–µ –≤–µ—Ä—Ç–µ–ª',
    '–Ø –∏ –µ—Å—Ç—å –ì–æ—Ä —Å –¥—Ä—É–≥–æ–≥–æ –∞–∫–∫–∞',
    '–ì–æ—Ä—ã –¥–ª—è –ø–∏–¥–æ—Ä–æ–≤',
    '–£ –ì–æ—Ä–æ–≤ –º–∞–ª–µ–Ω—å–∫–∏–π —á–ª–µ–Ω',
    '–ï–±–∞—Ç—å –ì–æ—Ä –¥—É—à–Ω–∏–ª–∞'
]
random_values_max = [
    '–ú–∞–∫—Å—ã –¥–ª—è –Ω–∞—Ç—É—Ä–∞–ª–æ–≤',
    '–ú–∞–∫—Å..., –∫–∞–∫ –æ–Ω –º–Ω–µ –≤—á–µ—Ä–∞ —Å–ø–∏–Ω–∫—É –ø–æ–º—è–ª',
    '–Ø –ª—é–±–ª—é –ú–∞–∫—Å–∞, –∞ –ú–∞–∫—Å –º–µ–Ω—è?',
    '–ú–∞–∫—Å –æ–ø—è—Ç—å –æ–ø–æ–∑–¥–∞–µ—Ç, –∑–∞–±–µ–π',
    '–ú–∞–∫—Å—ã –∑–∞–µ–±–∞–ª–∏'
]
random_values_andrey = [
    '–Ø —â–∞—Å —Ç–µ–±–µ –ø–∞—Ä–æ–≤–æ–∑ –≤ –æ—á–∫–æ –ø—É—â—é',
    '–†–∂–¥ —Å–∏–ª–∞, –ê–Ω–¥—Ä–µ–π –ø–∏–¥—Ä–∏–ª–∞',
    '–ê–Ω–¥—Ä–µ–∏ –¥–ª—è —Ç—Ä–∞–Ω—Å–æ–≤',
    '–ê–Ω–¥—Ä–µ–π, –Ω–∞–π–¥–∏ —É–∂–µ —Å–µ–±–µ –¥–µ–≤—É—à–∫—É',
    '–Ø –±—ã —Ç—Ä–∞—Ö–Ω—É–ª –ê–Ω–¥—Ä–µ—è'
]
random_values_stas = [
    '–ë–ª—è –æ–±–æ–∂–∞—é –°—Ç–∞—Å–æ–≤',
    '–°—Ç–∞—Å—ã –∞—Ö—É–µ–Ω–Ω—ã–µ',
    '–í—Å–µ –°—Ç–∞—Å—ã —Ç–∞–∫–∏–µ –ø–∏–∑–¥–∞—Ç—ã–µ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –û—Ä–ª–æ–≤—Å–∫–∏–π?',
    '–£ –°—Ç–∞—Å–æ–≤ –±–æ–ª—å—à–∏–µ —á–ª–µ–Ω—ã –∫—Å—Ç–∞',
    '–°—Ç–∞—Å—ã –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–µ–≤—É—à–µ–∫'
]
random_values_blya = [
    '–ë–ª—è, –±–ª—è, –∏–¥–∏ —Å–ª–æ–≤–∞—Ä—å –ø–æ—á–∏—Ç–∞–π, –Ω–µ—É—á',
    '–ë–ª—è—Ç–∫–∏ –¥–ª—è –ú–∞–∫—Å–æ–≤, –æ–π, —Ç–æ –µ—Å—Ç—å –≥–µ–µ–≤',
    '–ï—â–µ –æ–¥–∏–Ω "–±–ª—è" –∏ —è –ª–æ–º–∞—é —Ç–µ–±–µ –µ–±–∞–ª–æ',
    '–ö—Ç–æ —Å–∫–∞–∑–∞–ª "–±–ª—è"!?',
    '–Ø —â–∞—Å –≤ –∂–æ–ø—É —Ç–µ–±–µ –∑–∞—Å—É–Ω—É —Ç–≤–æ–µ "–±–ª—è"!'
]
random_values_axax = [
    '–ê–•–ê–•–ê–•–ê–•–ê–•',
    '–ü–∏–∑–¥–µ—Ü —É —Ç–µ–±—è —Å–º–µ—Ö',
    '–ï—â–µ —Ä–∞–∑ –ø–æ—Å–º–µ–µ—à—å—Å—è, —è —Å–Ω–µ—Å—É –ï–±–∞–ª–æ –ì–æ—Ä—É',
    '–•—É–ª–∏ —Ä–∂–µ—à—å?',
    '–Ø —á–µ—Ç —Å–º–µ—à–Ω–æ–µ —Å–∫–∞–∑–∞–ª?'
]

tuesday_1 = '1. –°–æ–ø—Ä–æ–º–∞—Ç (–ø—Ä. 411)\n2. –°–æ–ø—Ä–æ–º–∞—Ç (–ø—Ä. 411)\n3. –§–∏–∑–∏–∫–∞ (–ø—Ä. 713)\n4. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞'
wensday_1 = '1. –¢–µ–æ—Ä–º–µ—Ö (–ø—Ä. 411)\n2. –í—ã—à–º–∞—Ç (–ª. 546)\n3. –§–∏–ª–æ—Å–æ—Ñ–∏—è (–ª. 526)'
thursday_1 = '1. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è (–ø—Ä. 716)\n2. –ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∑–µ–º–∫–∏ (–ª. 518)\n3. –¢–µ–æ—Ä–º–µ—Ö (–ª. 645)\n4. –§–∏–ª–æ—Å–æ—Ñ–∏—è (–ø—Ä. 524)'
friday_1 = '1. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞\n2. –ê–Ω–≥–ª. —è–∑\n3. –í—ã—à–º–∞—Ç (–ø—Ä. 511)\n4. –§–∏–∑–∏–∫–∞ (–ª, 846)'

tuesday_2 = '1. -\n2. –°–æ–ø—Ä–æ–º–∞—Ç (–ø—Ä. 411)\n3. –§–∏–∑–∏–∫–∞ (–ø—Ä. 713)\n4. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞\n5. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è (–ª, 828)'
wensday_2 = '1. –¢–µ–æ—Ä–º–µ—Ö (–ø—Ä. 411)\n2. –í—ã—à–º–∞—Ç (–ª. 546)\n3. –°–æ–ø—Ä–æ–º–∞—Ç (–ª, 645)\n4. –§–∏–ª–æ—Å–æ—Ñ–∏—è (–ø—Ä. 540)'
thursday_2 = '1. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è (–ø—Ä. 716)\n2. –ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∑–µ–º–∫–∏ (–ª. 518)\n3. –¢–µ–æ—Ä–º–µ—Ö (–ª. 645)\n4. –§–∏–ª–æ—Å–æ—Ñ–∏—è (–ø—Ä. 524)'
friday_2 = '1. –§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞\n2. –ê–Ω–≥–ª. —è–∑\n3. –í—ã—à–º–∞—Ç (–ø—Ä. 511)\n4. –§–∏–∑–∏–∫–∞ (–ª, 846)'


def get_weather():
    try:
        answer = requests.get(f'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API_KEY}')
        return answer.json()
    except Exception as e:
        raise KeyError('API doesnt work!')


@bot.message_handler(commands=['weather'])
def main(message):
    msg_json = get_weather()
    clouds = list(msg_json.get('clouds').values())[0]
    temp = round(int(msg_json.get('main').get('temp')) - 273, 0)
    temp_max = round(int(msg_json.get('main').get('temp_max')) - 273, 0)
    temp_min = round(int(msg_json.get('main').get('temp_min')) - 273, 0)
    wind_speed = msg_json.get('wind').get('speed')
    text = f'–ü–æ–≥–æ–¥–∞ –≤ –ü–∏—Ç–µ—Ä–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n' \
           f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {clouds}% ‚òÅÔ∏è\n' \
           f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞ üÜí\n' \
           f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max}¬∞ üî•\n' \
           f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_min}¬∞ üßä\n' \
           f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å üå¨Ô∏è'
    bot.reply_to(message, text)


def get_schedule_of_the_day(message):
    print(message)
    print(message.text)
    answer_of_user = message.text.split(',')
    week = answer_of_user[0]
    day = answer_of_user[1]
    if week == '1':
        if day == '–ø–Ω':
            bot.reply_to(message, '–£ –Ω–∞—Å –≤–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞, –≥–æ—Ç–æ–≤—å —Å–≤–æ—é –∑–∞–¥–Ω–∏—Ü—É –¥–ª—è –º–∞–π–æ—Ä–∞ –û–ü–û–õ–ï–í–ê')
            return
        if day == '–≤—Ç':
            bot.reply_to(message, tuesday_1)
            return
        if day == '—Å—Ä':
            bot.reply_to(message, wensday_1)
            return
        if day == '—á—Ç':
            bot.reply_to(message, thursday_1)
            return
        if day == '–ø—Ç':
            bot.reply_to(message, friday_1)
            return
        else:
            bot.reply_to(message, '–Ø—â–µ—Ä —Ç—ã –±–µ–∑–º–æ–∑–≥–ª—ã–π, –¥–≤–µ –±—É–∫–∞–≤–∫–∏ –±–ª—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–µ –≤–≤–µ—Å—Ç–∏!?\n–ü—Ä–∏–º–µ—Ä: 2,–≤—Ç')
            return
    if week == '2':
        if day == '–ø–Ω':
            bot.reply_to(message, '–£ –Ω–∞—Å –≤–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞, –≥–æ—Ç–æ–≤—å —Å–≤–æ—é –∑–∞–¥–Ω–∏—Ü—É –¥–ª—è –º–∞–π–æ—Ä–∞ –û–ü–û–õ–ï–í–ê')
            return
        if day == '–≤—Ç':
            bot.reply_to(message, tuesday_2)
            return
        if day == '—Å—Ä':
            bot.reply_to(message, wensday_2)
            return
        if day == '—á—Ç':
            bot.reply_to(message, thursday_2)
            return
        if day == '–ø—Ç':
            bot.reply_to(message, friday_2)
            return
        else:
            bot.reply_to(message, '–Ø—â–µ—Ä —Ç—ã –±–µ–∑–º–æ–∑–≥–ª—ã–π, –¥–≤–µ –±—É–∫–∞–≤–∫–∏ –±–ª—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–µ –≤–≤–µ—Å—Ç–∏!?\n–ü—Ä–∏–º–µ—Ä: 2,–≤—Ç')
            return
    else:
        bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –Ω–µ–¥–µ–ª—é, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 1 –∏–ª–∏ 2! –î–ï–ë–ò–õ –ë–õ–Ø–¢–¨\n–ü—Ä–∏–º–µ—Ä: 1,—á—Ç')
        return


@bot.message_handler(commands=['schedule'])
def get_schedule(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á—ë—Ç–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏ –∏ –¥–µ–Ω—å\n–ü—Ä–∏–º–µ—Ä: 1,–ø–Ω\n2 - —á–µ—Ç–Ω–∞—è\n1 - –Ω–µ—á–µ—Ç–Ω–∞—è')
    bot.register_next_step_handler(msg, get_schedule_of_the_day)


@bot.message_handler(content_types=["text"])
def answer_of_messages(message):
    random_value = randint(0, 2)
    if not random_value:
        random_number = randint(0, 4)
        if '–Ω–∞—Ö' in message.text:
            bot.reply_to(message, random_values_fuck[random_number])
            return
        if '–ì–æ—Ä' in message.text:
            bot.reply_to(message, random_values_gor[random_number])
            return
        if '–ê–Ω–¥—Ä–µ–π' in message.text:
            bot.reply_to(message, random_values_andrey[random_number])
            return
        if '–°—Ç–∞—Å' in message.text:
            bot.reply_to(message, random_values_stas[random_number])
            return
        if '–ú–∞–∫—Å' in message.text:
            bot.reply_to(message, random_values_max[random_number])
            return
        if '–Ω—É' in message.text:
            bot.reply_to(message, '–±–∞—Ä–∞–Ω–∫–∏ –≥–Ω—É! –∑–∞–µ–±–∞–ª')
            return
        if '–±–ª—è' in message.text:
            bot.reply_to(message, random_values_blya[random_number])
            return
        if '–∞—Ö–∞—Ö' in message.text:
            bot.reply_to(message, random_values_axax[random_number])
            return


bot.infinity_polling()
